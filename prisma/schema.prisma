// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")

}

generator client {
  provider = "prisma-client-js"
}

model Conversation {
  id          Int          @id @default(autoincrement())
  context     Int
  answer      String
  type        String
  isStarted   Boolean      @default(false) @map("is_started")
  typedText   String?      @map("typed_text")
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  employee    Employee     @relation(fields: [employeeId], references: [id])
  employeeId  Int          @map("employee_id")
  attachments Attachment[]

  @@map(name: "conversations")
}

model Attachment {
  id             Int          @id @default(autoincrement())
  filename       String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int          @map("conversation_id")
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")

  @@map(name: "attachments")
}

model TemporaryConversation {
  id        Int      @id @default(autoincrement())
  context   Int
  answer    String
  type      String
  isStarted Boolean  @default(false) @map("is_started")
  typedText String?  @map("typed_text")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  from      String

  @@map(name: "temporary_conversations")
}

model Employee {
  id            Int             @id @default(autoincrement())
  name          String
  score         Int             @default(0)
  code          Int?
  conversation  Conversation[]
  employeeToken EmployeeToken[]
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @updatedAt @map("updated_at")

  @@map(name: "employees")
}

model EmployeeToken {
  id         Int      @id @default(autoincrement())
  name       String
  token      String
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int      @map("employee_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map(name: "employee_token")
}
